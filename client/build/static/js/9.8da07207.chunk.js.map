{"version":3,"sources":["pages/sign-in-sign-up/sign-in-sign-up-styles.jsx","components/sign-in/sign-in-styles.jsx","components/form-input/form-input-styles.jsx","components/form-input/form-input.jsx","components/sign-in/sign-in.jsx","components/sign-up/sign-up-styles.jsx","components/sign-up/sign-up.jsx","pages/sign-in-sign-up/sign-in-sign-up.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["SignInSignUp","styled","div","SignIn","Title","h2","Buttons","shrinkLabel","css","Group","FormInputLabel","label","value","length","FormInput","input","handleChange","rest","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","target","name","onSubmit","type","required","onClick","mod","SignUp","signUpStart","displayName","confirmPassword","alert","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/9.8da07207.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SignInSignUp = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    width: 90vw;\n    flex-direction: column;\n    align-items: center;\n  }\n`;","import styled from 'styled-components';\n\nexport const SignIn = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 800px) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;","import styled, {css} from 'styled-components';\n\n\nconst shrink = ({value}) => {\n  if (value.length) {\n    return shrinkLabel;\n  }\n};\n\nconst shrinkLabel = css`\n  top: -14px;\n  font-size: 12px;\n  color: black;\n`;\n\nexport const Group = styled.div`\n  position: relative;\n  margin: 45px 0;\n`;\n\nexport const FormInputLabel = styled.label`\n  color: grey;\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  ${shrink};\n`;\n\nexport const FormInput = styled.input`\n  background: none;\n  background-color: white;\n  color: black;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid grey;\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n\n    ~${FormInputLabel} {\n      ${shrinkLabel};\n    }\n  }\n\n  &[type='password'] {\n    letter-spacing: 0.3em;\n  } \n`;\n","import React from 'react';\nimport * as S from './form-input-styles';\n\nconst FormInput = ({handleChange, label, value, ...rest}) => {\n  return (\n    <S.Group>\n      <S.FormInput onChange={handleChange} {...rest} />\n      {label ?\n        <S.FormInputLabel value={value}>\n          {label}\n        </S.FormInputLabel>\n        : null\n      }\n    </S.Group>\n  );\n};\n\nexport default FormInput;","import React, {useState} from 'react';\nimport * as S from './sign-in-styles';\n\nimport {connect} from 'react-redux';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\n\nconst SignIn = ({googleSignInStart, emailSignInStart}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '', \n    password: ''\n  });\n  const {email, password} = userCredentials;\n\n  const\thandleSubmit = (event) => {\n    event.preventDefault();  \n    emailSignInStart(email, password);\n\t}\n\n\n  const\thandleChange = event => {\n    const {value, name} = event.target;\n    setUserCredentials({...userCredentials, [name]: value});\n  }\n\n  return (\n    <S.SignIn>\n      <S.Title>I already have an account</S.Title>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput \n          name='email' \n          type='email' \n          value={email} \n          handleChange={handleChange} \n          label='Email'\n          required \n        />\n        <FormInput \n          name='password' \n          type='password' \n          value={password} \n          handleChange={handleChange} \n          label='Password'\n          required \n        />\n        <S.Buttons>\n          <CustomButton type='submit' onClick={handleSubmit}>\n            Sign in\n          </CustomButton>\n          <CustomButton type='button' onClick={googleSignInStart} mod='googleSignIn'>\n            Sign in with Google\n          </CustomButton>\n        </S.Buttons>\n      </form>\n    </S.SignIn>\n  )\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => \n    dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\n\nexport const SignUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n`;\n\nexport const Title = styled.h2`\n    margin: 10px 0;\n`;","import React, {useState} from 'react';\nimport * as S from './sign-up-styles';\n\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\n\nconst SignUp = ({signUpStart}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '', \n    password: '', \n    confirmPassword: '', \n    displayName: ''\n  });\n  const {displayName, email, password, confirmPassword} = userCredentials;\n  \n\n  const handleSubmit = event => {\n    event.preventDefault();  \n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    signUpStart(email, password, displayName);\n  }\n\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setUserCredentials({...userCredentials, [name]: value});\n  }\n\n\n  return (\n    <S.SignUp>\n      <S.Title>I do not have an account</S.Title>\n      <span>Sign up with with email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput \n          type='text' \n          name='displayName' \n          value={displayName} \n          handleChange={handleChange} \n          label='Display Name' \n          required \n        />\n          <FormInput \n          type='email' \n          name='email' \n          value={email} \n          handleChange={handleChange} \n          label='Email' \n          required \n        />\n          <FormInput \n          type='password' \n          name='password' \n          value={password} \n          handleChange={handleChange} \n          label='Password' \n          required \n        />\n          <FormInput \n          type='password' \n          name='confirmPassword' \n          value={confirmPassword} \n          handleChange={handleChange} \n          label='Confirm Password' \n          required \n        />\n        <CustomButton type='submit' onClick={handleSubmit}>SIGN UP</CustomButton>\n      </form>\n    </S.SignUp>\n  );\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => \n    dispatch(signUpStart({email, password, displayName}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\nimport * as S from './sign-in-sign-up-styles';\n\nimport SignIn from '../../components/sign-in/sign-in';\nimport SignUp from '../../components/sign-up/sign-up';\n\nconst SignInSignUp = () => {\n    return (\n        <S.SignInSignUp>\n            <SignIn />\n            <SignUp />\n        </S.SignInSignUp>\n    )\n};\n\nexport default SignInSignUp;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}