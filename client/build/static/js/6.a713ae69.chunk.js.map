{"version":3,"sources":["pages/collections-overview/collections-overview-styles.jsx","components/collection-preview/collection-preview-styles.jsx","components/collection-preview/collection-preview.jsx","pages/collections-overview/collections-overview.jsx","components/collection-item/collection-item-styles.jsx","components/collection-item/collection-item.jsx"],"names":["CollectionsOverview","styled","div","CollectionPreview","Title","h1","Preview","withRouter","title","items","match","history","as","Link","to","path","toLowerCase","toUpperCase","filter","item","i","map","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","rest","Image","imageUrl","css","CollectionItem","CustomButton","CollectionFooter","Name","span","Price","dispatch","addItem","name","price","mod","onClick"],"mappings":"qRAEO,IAAMA,EAAsBC,IAAOC,IAAV,K,isBCAzB,IAAMC,EAAoBF,IAAOC,IAAV,KAUjBE,EAAQH,IAAOI,GAAV,KAULC,EAAUL,IAAOC,IAAV,K,wBCGLK,eAlBW,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAgBC,GAAW,EAApBC,QAAoB,EAAXD,OACjD,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEE,GAAIC,IAAMC,GAAE,UAAKJ,EAAMK,KAAX,YAAmBP,EAAMQ,gBAEpCR,EAAMS,eAET,kBAAC,EAAD,KACGR,EAAMS,QAAO,SAACC,EAAMC,GAAP,OAAaA,EAAI,KAC9BC,KAAI,SAAAF,GAAI,OACL,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,YCE1CK,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGAC,sBAAQJ,EAARI,EAda,SAAC,GAAmB,IAAlBF,EAAiB,EAAjBA,YAC5B,OACE,kBAAC,EAAD,KACGA,EAAYL,KAAI,gBAAEE,EAAF,EAAEA,GAAOM,EAAT,6BACf,kBAAC,EAAD,eAAmBP,IAAKC,GAAQM,Y,u4CCXxC,IAIaC,EAAQ7B,IAAOC,IAAV,KAJE,SAAC,GAAgB,IAAf6B,EAAc,EAAdA,SACpB,OAAOC,YAAP,IAAmCD,MAYxBE,EAAiBhC,IAAOC,IAAV,IAWrB4B,EAIAI,IAUEJ,EAIAI,IAKFA,KASOC,EAAmBlC,IAAOC,IAAV,KAShBkC,EAAOnC,IAAOoC,KAAV,KAIJC,EAAQrC,IAAOoC,KAAV,K,wBC5CHT,gBAAQ,MAJI,SAAAW,GAAQ,MAAK,CACpCC,QAAS,SAAArB,GAAI,OAAIoB,EAASC,YAAQrB,QAGvBS,EApBS,SAAC,GAAqB,IAApBT,EAAmB,EAAnBA,KAAMqB,EAAa,EAAbA,QACvBC,EAAyBtB,EAAzBsB,KAAMC,EAAmBvB,EAAnBuB,MAAOX,EAAYZ,EAAZY,SACpB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASA,SAAUA,IACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,KAASU,GACT,kBAAC,EAAD,KAAUC,IAEZ,kBAAC,IAAD,CAAcC,IAAI,WAAWC,QAAS,kBAAMJ,EAAQrB,KAApD","file":"static/js/6.a713ae69.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionsOverview = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import styled from 'styled-components';\n\nexport const CollectionPreview = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 38px;\n  font-weight: 600;\n  margin: 20px 0 25px 10px;\n\n  @media screen and (max-width: 800px) {\n    margin: 0 0 25px 0;\n  }\n`;\n\nexport const Preview = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`","import React from 'react';\nimport * as S from './collection-preview-styles';\n\nimport {withRouter, Link} from 'react-router-dom';\n\nimport CollectionItem from '../collection-item/collection-item';\n\nconst CollectionPreview = ({title, items, history, match}) => {\n  return (\n    <S.CollectionPreview>\n      <S.Title \n        as={Link} to={`${match.path}/${title.toLowerCase()}`}\n      >\n        {title.toUpperCase()}\n      </S.Title>\n      <S.Preview>\n        {items.filter((item, i) => i < 4)\n        .map(item => \n            <CollectionItem key={item.id} item={item} />\n        )}\n      </S.Preview>\n    </S.CollectionPreview>\n  )\n}\n\nexport default withRouter(CollectionPreview);","import React from 'react';\nimport * as S from './collections-overview-styles';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollectionsForPreview} from '../../redux/shop/shop-selectors';\n\nimport CollectionPreview from '../../components/collection-preview/collection-preview';\n\n\nconst CollectionsOverview = ({collections}) => {\n  return (\n    <S.CollectionsOverview>\n      {collections.map(({id, ...rest}) =>\n        <CollectionPreview key={id} {...rest} />\n      )}\n    </S.CollectionsOverview>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import styled, {css} from 'styled-components';\nimport {CustomButton} from '../custom-button/custom-button-styles';\n\nconst getImageUrl = ({imageUrl}) => {\n  return css`background-image: url(${imageUrl})`;\n};\n\nexport const Image = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  ${getImageUrl};\n`;\n\nexport const CollectionItem = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  padding: 0 10px;\n  margin-bottom: 30px;\n\n  &:hover {\n    ${Image} {\n      opacity: 0.8;\n    }\n\n    ${CustomButton} {\n      opacity: 0.85;\n      display: initial;\n    }\n  }\n  \n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      ${Image} {\n        opacity: unset;\n      }\n\n      ${CustomButton} {\n        opacity: unset;\n      }\n    }\n\n    ${CustomButton} {\n      display: block;\n      opacity: 0.9;\n      min-width: unset;\n      padding: 0 10px;\n    }\n  }\n`;\n\nexport const CollectionFooter = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\n\nexport const Name = styled.span`\n  margin-bottom: 15px;\n`;\n\nexport const Price = styled.span`\n  text-align: end;\n  padding-right: 2px;\n`;","import React from 'react';\nimport * as S from './collection-item-styles';\n\nimport {connect} from 'react-redux';\nimport {addItem} from '../../redux/cart/cart-actions';\n\nimport CustomButton from '../custom-button/custom-button';\n\nconst CollectionItem = (({item, addItem}) => {\n  const {name, price, imageUrl} = item;\n  return (\n    <S.CollectionItem>\n      <S.Image imageUrl={imageUrl} />\n      <S.CollectionFooter>\n        <S.Name>{name}</S.Name>\n        <S.Price>{price}</S.Price>\n      </S.CollectionFooter>\n      <CustomButton mod='inverted' onClick={() => addItem(item)}>\n          Add to cart\n      </CustomButton>\n    </S.CollectionItem>\n  );\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}