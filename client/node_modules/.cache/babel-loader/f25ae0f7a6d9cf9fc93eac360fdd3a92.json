{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n      updateCollections(convertCollectionsSnapshotToMap(snapshot));\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/pages/shop/shop.jsx"],"names":["React","Route","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","CollectionsOverview","Collection","WithSpinner","CollectionsOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","state","loading","unsubscribFromSnapshot","componentDidMount","props","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,qBAAqB,GAAGF,WAAW,CAACD,UAAD,CAAzC;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,sBALqC,GAKZ,IALY;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACX,MAAAA;AAAD,QAAsB,KAAKY,KAAjC;AACA,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKC,uBAAL,GAA+BF,aAAa,CAACG,UAAd,CAAyBC,QAAQ,IAAI;AAClEjB,MAAAA,iBAAiB,CAACF,+BAA+B,CAACmB,QAAD,CAAhC,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAH8B,CAA/B;AAID;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,uBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEV,KAAK,iBACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEV,KAAK,iBACX,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEH;AAAlC,SAA+CG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAxCoC;;AAyCtC;;AAED,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,iBAAiB,EAAEyB,WAAW,IAAID,QAAQ,CAACxB,iBAAiB,CAACyB,WAAD,CAAlB;AADJ,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase-utils';\n\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../redux/shop/shop-actions';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribFromSnapshot = null;\n\n  componentDidMount() {\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n      updateCollections(convertCollectionsSnapshotToMap(snapshot));\n      this.setState({loading: false});\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const {match} = this.props;\n    const {loading} = this.state;\n    return (\n      <div className='shop-page'>\n        <Route \n          exact \n          path={`${match.path}`} \n          render={props => \n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n          }\n        />\n        <Route \n          path={`${match.path}/:collectionId`}\n          render={props => \n            <CollectionWithSpinner isLoading={loading} {...props} />\n          }\n        />\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}