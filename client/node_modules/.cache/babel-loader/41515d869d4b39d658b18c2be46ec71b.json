{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user-actions';\n\nfunction* getSnapshotFromUserAuth(userAuth, ...rest) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, rest);\n    const userSnapshot = yield call([userRef, userRef.get]);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call([auth, auth.signInWithPopup], googleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\n;\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield call([auth, auth.signInWithEmailAndPassword], email, password);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\n;\n\nfunction* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield call([auth, auth.createUserWithEmailAndPassword], email, password);\n    yield call(getSnapshotFromUserAuth, user, displayName);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* onSignUpStart() {\n  yield takeLatest(Types.SIGN_UP_START, signUp);\n}\n\n;\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(Types.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* signOut() {\n  try {\n    yield call([auth, auth.signOut]);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(Types.SIGN_OUT_START, signOut);\n}\n\n;\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}\n;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","Types","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","rest","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport {signInSuccess, signInFailure, signOutSuccess, signOutFailure} from './user-actions';\n\n\nfunction* getSnapshotFromUserAuth(userAuth, ...rest) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, rest);\n    const userSnapshot = yield call([userRef, userRef.get]);\n    yield put(signInSuccess(\n      {id: userSnapshot.id, ...userSnapshot.data()}\n    ));\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n};\n\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield call([auth, auth.signInWithPopup], googleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch(error) {\n    yield put(signInFailure(error)); \n  }\n};\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\n\nfunction* signInWithEmail({payload: {email, password}}) {\n  try {\n    const {user} = yield call(\n      [auth, auth.signInWithEmailAndPassword], email, password\n    );\n    yield call(getSnapshotFromUserAuth, user);\n  } catch(error) {\n    yield put(signInFailure(error)); \n  }\n};\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\n\nfunction* signUp({payload: {email, password, displayName}}) {\n  try {\n    const {user} = yield call(\n      [auth, auth.createUserWithEmailAndPassword], email, password\n    );\n    yield call(getSnapshotFromUserAuth, user, displayName);\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n};\n\nfunction* onSignUpStart() {\n  yield takeLatest(Types.SIGN_UP_START, signUp);\n};\n\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call (getSnapshotFromUserAuth, userAuth);\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(Types.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\n\nfunction* signOut() {\n  try {\n    yield call([auth, auth.signOut]);\n    yield put(signOutSuccess());\n  } catch(error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(Types.SIGN_OUT_START, signOut);\n};\n\n\nexport default function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}