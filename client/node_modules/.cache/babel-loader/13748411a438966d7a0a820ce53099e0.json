{"ast":null,"code":"import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyCZr0n2mkvrHqgqiItcJ_xCw8Eam7HxqmE\",authDomain:\"crown-database-ed8fc.firebaseapp.com\",databaseURL:\"https://crown-database-ed8fc.firebaseio.com\",projectId:\"crown-database-ed8fc\",storageBucket:\"crown-database-ed8fc.appspot.com\",messagingSenderId:\"219617685266\",appId:\"1:219617685266:web:46ddde6db938c882624dcb\",measurementId:\"G-DG8HQG94M7\"};firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var createUserProfileDocument=function createUserProfileDocument(userAuth){for(var _len=arguments.length,rest=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){rest[_key-1]=arguments[_key];}if(!userAuth)return;var userRef=firestore.doc(\"users/\".concat(userAuth.uid));userRef.get().then(function(snapShot){if(!snapShot.exists){var displayName=userAuth.displayName,email=userAuth.email;var createdAt=new Date();var cart=[];userRef.set({displayName:displayName,email:email,createdAt:createdAt,cart:cart});userRef.update.apply(userRef,rest);}}).catch(function(err){return console.log('Error creating user:',err);});return userRef;};export var saveUserCart=function saveUserCart(currentUser,cartItems){if(!currentUser)return;var userRef=firestore.doc(\"users/\".concat(currentUser.id));userRef.update({cart:cartItems}).catch(function(err){return console.log('Error saving user cart: ',err);});return userRef;};export var addCollectionAndDocs=function addCollectionAndDocs(collectionKey,docsToAdd){var collectionRef=firestore.collection(collectionKey);var batch=firestore.batch();docsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});batch.commit();};export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export default firebase;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/firebase/firebase-utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","userAuth","createUserProfileDocument","rest","userRef","doc","uid","get","then","snapShot","exists","displayName","email","createdAt","Date","cart","set","update","catch","err","console","log","saveUserCart","currentUser","cartItems","id","addCollectionAndDocs","collectionKey","docsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","reduce","accumulator","googleProvider","GoogleAuthProvider","setCustomParameters","prompt"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,sCAFD,CAGXC,WAAW,CAAE,6CAHF,CAIXC,SAAS,CAAE,sBAJA,CAKXC,aAAa,CAAE,kCALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CAPI,CAQXC,aAAa,CAAE,cARJ,CAAf,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,EAEA,MAAO,IAAMU,CAAAA,IAAI,CAAGX,QAAQ,CAACW,IAAT,EAAb,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAGZ,QAAQ,CAACY,SAAT,EAAlB,CAGP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAMC,CAAAA,WAAW,CAAGN,IAAI,CAACO,kBAAL,CAAwB,SAAAC,QAAQ,CAAI,CACtDF,WAAW,GACXF,OAAO,CAACI,QAAD,CAAP,CACD,CAHmB,CAGjBH,MAHiB,CAApB,CAID,CALM,CAAP,CAMD,CAPM,CAUP,MAAO,IAAMI,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACD,QAAD,CAAuB,+BAATE,IAAS,qDAATA,IAAS,0BAC9D,GAAI,CAACF,QAAL,CAAe,OAEf,GAAMG,CAAAA,OAAO,CAAGV,SAAS,CAACW,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CACAF,OAAO,CAACG,GAAR,GACCC,IADD,CACM,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,MAAd,CAAsB,IACbC,CAAAA,WADa,CACSV,QADT,CACbU,WADa,CACAC,KADA,CACSX,QADT,CACAW,KADA,CAEpB,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,EAAlB,CACA,GAAMC,CAAAA,IAAI,CAAG,EAAb,CACAX,OAAO,CAACY,GAAR,CAAY,CAACL,WAAW,CAAXA,WAAD,CAAcC,KAAK,CAALA,KAAd,CAAqBC,SAAS,CAATA,SAArB,CAAgCE,IAAI,CAAJA,IAAhC,CAAZ,EACAX,OAAO,CAACa,MAAR,OAAAb,OAAO,CAAWD,IAAX,CAAP,CACD,CACF,CATD,EAUCe,KAVD,CAUO,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCF,GAApC,CAAJ,EAVV,EAWA,MAAOf,CAAAA,OAAP,CACD,CAhBM,CAmBP,MAAO,IAAMkB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,WAAD,CAAcC,SAAd,CAA4B,CACtD,GAAI,CAACD,WAAL,CAAkB,OAElB,GAAMnB,CAAAA,OAAO,CAAGV,SAAS,CAACW,GAAV,iBAAuBkB,WAAW,CAACE,EAAnC,EAAhB,CACArB,OAAO,CAACa,MAAR,CAAe,CAACF,IAAI,CAAES,SAAP,CAAf,EACCN,KADD,CACO,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCF,GAAxC,CAAJ,EADV,EAGA,MAAOf,CAAAA,OAAP,CACD,CARM,CAWP,MAAO,IAAMsB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,aAAD,CAAgBC,SAAhB,CAA8B,CAChE,GAAMC,CAAAA,aAAa,CAAGnC,SAAS,CAACoC,UAAV,CAAqBH,aAArB,CAAtB,CAEA,GAAMI,CAAAA,KAAK,CAAGrC,SAAS,CAACqC,KAAV,EAAd,CACAH,SAAS,CAACI,OAAV,CAAkB,SAAAC,GAAG,CAAI,CACvB,GAAMC,CAAAA,SAAS,CAAGL,aAAa,CAACxB,GAAd,EAAlB,CACA0B,KAAK,CAACf,GAAN,CAAUkB,SAAV,CAAqBD,GAArB,EACD,CAHD,EAKAF,KAAK,CAACI,MAAN,GACD,CAVM,CAaP,MAAO,IAAMC,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAAAC,WAAW,CAAI,CAC5D,GAAMC,CAAAA,qBAAqB,CAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqB,SAAAnC,GAAG,CAAI,eACjCA,GAAG,CAACoC,IAAJ,EADiC,CACjDC,KADiD,WACjDA,KADiD,CAC1CC,KAD0C,WAC1CA,KAD0C,CAExD,MAAO,CACLC,SAAS,CAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADf,CAELrB,EAAE,CAAEpB,GAAG,CAACoB,EAFH,CAGLiB,KAAK,CAALA,KAHK,CAILC,KAAK,CAALA,KAJK,CAAP,CAMD,CAR6B,CAA9B,CAUA,MAAOL,CAAAA,qBAAqB,CAACS,MAAtB,CAA6B,SAACC,WAAD,CAAclB,UAAd,CAA6B,CAC/DkB,WAAW,CAAClB,UAAU,CAACY,KAAX,CAAiBI,WAAjB,EAAD,CAAX,CAA8ChB,UAA9C,CACA,MAAOkB,CAAAA,WAAP,CACD,CAHM,CAGJ,EAHI,CAAP,CAID,CAfM,CAkBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,GAAInE,CAAAA,QAAQ,CAACW,IAAT,CAAcyD,kBAAlB,EAAvB,CACPD,cAAc,CAACE,mBAAf,CAAmC,CAACC,MAAM,CAAE,gBAAT,CAAnC,EAGA,cAAetE,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCZr0n2mkvrHqgqiItcJ_xCw8Eam7HxqmE\",\n    authDomain: \"crown-database-ed8fc.firebaseapp.com\",\n    databaseURL: \"https://crown-database-ed8fc.firebaseio.com\",\n    projectId: \"crown-database-ed8fc\",\n    storageBucket: \"crown-database-ed8fc.appspot.com\",\n    messagingSenderId: \"219617685266\",\n    appId: \"1:219617685266:web:46ddde6db938c882624dcb\",\n    measurementId: \"G-DG8HQG94M7\"\n  };\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject)\n  })\n};\n\n\nexport const createUserProfileDocument = (userAuth, ...rest) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  userRef.get()\n  .then(snapShot => {\n    if (!snapShot.exists) {\n      const {displayName, email} = userAuth;\n      const createdAt = new Date();\n      const cart = [];\n      userRef.set({displayName, email, createdAt, cart});\n      userRef.update(...rest);\n    }\n  })\n  .catch(err => console.log('Error creating user:', err));\n  return userRef;\n}\n\n\nexport const saveUserCart = (currentUser, cartItems) => {\n  if (!currentUser) return;\n\n  const userRef = firestore.doc(`users/${currentUser.id}`);\n  userRef.update({cart: cartItems})\n  .catch(err => console.log('Error saving user cart: ', err));\n  \n  return userRef;\n}\n\n\nexport const addCollectionAndDocs = (collectionKey, docsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  docsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  })\n\n  batch.commit()\n}\n\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {title, items} = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  \n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {})\n}\n\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}