{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, GOOG, createUserProfileDocument } from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport { googleSignInSuccess, googleSignInFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    console.log(GOOG);\n    return; // // const {user} = yield auth.signInWithPopup(googleProvider);\n    // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapshot = yield userRef.get();\n    // yield put(googleSignInSuccess(\n    //   {id: userSnapshot.id, ...userSnapshot.data()}\n    // ));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","auth","GOOG","createUserProfileDocument","Types","googleSignInSuccess","googleSignInFailure","signInWithGoogle","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,yBAApB,QAAoD,+BAApD;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,QAAuD,gBAAvD;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,WAFE,CAGF;AACA;AACA;AACA;AACA;AACA;AACD,GATD,CASE,OAAMQ,KAAN,EAAa;AACb,UAAMZ,GAAG,CAACQ,mBAAmB,CAACI,KAAD,CAApB,CAAT;AACD;AACF;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMd,UAAU,CAACO,KAAK,CAACQ,oBAAP,EAA6BL,gBAA7B,CAAhB;AACD;AAAA;AAED,eAAe,UAAUM,SAAV,GAAsB;AACnC,QAAMd,GAAG,CAAC,CACRC,IAAI,CAACW,mBAAD,CADI,CAAD,CAAT;AAGD;AAAA","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\nimport {auth, GOOG, createUserProfileDocument} from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport {googleSignInSuccess, googleSignInFailure} from './user-actions';\n\n\nexport function* signInWithGoogle() {\n  try {\n    console.log(GOOG);\n    return\n    // // const {user} = yield auth.signInWithPopup(googleProvider);\n    // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapshot = yield userRef.get();\n    // yield put(googleSignInSuccess(\n    //   {id: userSnapshot.id, ...userSnapshot.data()}\n    // ));\n  } catch(error) {\n    yield put(googleSignInFailure(error));\n  }\n};\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport default function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}