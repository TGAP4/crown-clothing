{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/pages/collection/collection.jsx\";\nimport React from 'react';\nimport './collection.scss';\nimport { connect } from 'react-redux';\nimport { selectCollection, selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\nconst Collection = ({\n  collection,\n  isLoading\n}) => {\n  const {\n    title,\n    items\n  } = collection;\n  return isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n  isLoading: selectIsCollectionFetching\n});\n\nexport default connect(mapStateToProps)(Collection);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/pages/collection/collection.jsx"],"names":["React","connect","selectCollection","selectIsCollectionFetching","CollectionItem","LoadingSpinner","Collection","collection","isLoading","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,0BAA1B,QAA2D,iCAA3D;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAC9C,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAiBH,UAAvB;AACA,SACEC,SAAS,gBACT,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAEP;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,KAAvB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACf,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADH,CAFF,CAHJ;AAYD,CAdD;;AAgBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CT,EAAAA,UAAU,EAAEL,gBAAgB,CAACc,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD,CADgC;AAE5CP,EAAAA,SAAS,EAAEL;AAFiC,CAAtB,CAAxB;;AAKA,eAAeF,OAAO,CAACa,eAAD,CAAP,CAAyBR,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './collection.scss';\n\nimport {connect} from 'react-redux';\nimport {selectCollection, selectIsCollectionFetching} from '../../redux/shop/shop-selectors';\n\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\n\nconst Collection = ({collection, isLoading}) => {\n  const {title, items} = collection;\n  return (  \n    isLoading ? \n    <LoadingSpinner />\n    : <div className='collection'>\n        <h2 className='title'>{title}</h2>\n        <div className='items'>\n          {items.map(item => \n          <CollectionItem key={item.id} item={item} />\n          )}\n        </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n  isLoading: selectIsCollectionFetching\n})\n\nexport default connect(mapStateToProps)(Collection);"]},"metadata":{},"sourceType":"module"}