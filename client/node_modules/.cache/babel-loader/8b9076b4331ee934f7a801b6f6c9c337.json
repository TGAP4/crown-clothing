{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport Types from './shop-types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop-actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(Types.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/shop/shop-sagas.js"],"names":["takeEvery","call","put","Types","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAG;AACD,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACG,KAAK,CAACc,uBAAP,EAAgCT,qBAAhC,CAAf;AACD;AAAA","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\nimport Types from './shop-types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase-utils';\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop-actions';\n\n\nexport function* fetchCollectionsAsync() {\n  try{\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n};\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(Types.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n};"]},"metadata":{},"sourceType":"module"}