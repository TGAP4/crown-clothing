{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/components/sign-in/sign-in.jsx\";\nimport React from 'react';\nimport './sign-in.scss';\nimport { auth, signInWithGoogle } from '../../firebase/firebase-utils';\nimport { connect } from 'react-redux';\nimport { googleSignInStart } from '../../redux/user/user-actions';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      auth.signInWithEmailAndPassword(email, password).then(() => {\n        this.setState({\n          email: '',\n          password: ''\n        });\n      }).catch(err => console.log('Unable to sign in', err));\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      mod: \"googleSignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","auth","signInWithGoogle","connect","googleSignInStart","FormInput","CustomButton","SignIn","Component","constructor","props","handleSubmit","event","email","password","state","signInWithEmailAndPassword","then","setState","catch","err","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAQC,IAAR,EAAcC,gBAAd,QAAqC,+BAArC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAGA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,YARmB,GAQJC,KAAK,IAAI;AACpB,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoB,KAAKC,KAA/B;AACAd,MAAAA,IAAI,CAACe,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,EACCG,IADD,CACM,MAAM;AACR,aAAKC,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,QAAQ,EAAE;AAAtB,SAAd;AACH,OAHD,EAICK,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC,CAJd;AAKH,KAfkB;;AAAA,SAiBnBG,YAjBmB,GAiBJX,KAAK,IAAI;AACpB,YAAM;AAACY,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAgBb,KAAK,CAACc,MAA5B;AACA,WAAKR,QAAL,CAAc;AAAC,SAACO,IAAD,GAAQD;AAAT,OAAd;AACH,KApBkB;;AAEf,SAAKT,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAgBDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACvB,MAAAA;AAAD,QAAsB,KAAKM,KAAjC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,eAGI;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWF,KAHtB;AAII,MAAA,YAAY,EAAE,KAAKU,YAJvB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWD,QAHtB;AAII,MAAA,YAAY,EAAE,KAAKS,YAJvB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAiBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAE,KAAKZ,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEP,iBAArC;AAAwD,MAAA,GAAG,EAAC,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,CAjBJ,CAHJ,CADJ;AAgCH;;AAzDgC;;AA4DrC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAE,MAAMyB,QAAQ,CAACzB,iBAAiB,EAAlB;AADG,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCrB,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport './sign-in.scss';\nimport {auth, signInWithGoogle} from '../../firebase/firebase-utils';\n\nimport {connect} from 'react-redux';\nimport {googleSignInStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = event => {\n        const {email, password} = this.state;\n        auth.signInWithEmailAndPassword(email, password)\n        .then(() => {\n            this.setState({email: '', password: ''})\n        })\n        .catch(err => console.log('Unable to sign in', err));\n    }\n\n    handleChange = event => {\n        const {value, name} = event.target;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        const {googleSignInStart} = this.props;\n        return (\n            <div className='sign-in'>\n                <h2 className='title'>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                        name='email' \n                        type='email' \n                        value={this.state.email} \n                        handleChange={this.handleChange} \n                        label='Email'\n                        required \n                    />\n                    <FormInput \n                        name='password' \n                        type='password' \n                        value={this.state.password} \n                        handleChange={this.handleChange} \n                        label='Password'\n                        required \n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit' onClick={this.handleSubmit}>\n                            Sign in\n                        </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} mod='googleSignIn'>\n                            Sign in with Google\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}