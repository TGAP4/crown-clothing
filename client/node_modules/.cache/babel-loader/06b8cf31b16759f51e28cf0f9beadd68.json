{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/components/sign-in/sign-in.jsx\";\nimport React from 'react';\nimport './sign-in.scss';\nimport { auth } from '../../firebase/firebase-utils';\nimport { connect } from 'react-redux';\nimport { googleSignInStart } from '../../redux/user/user-actions';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      auth.signInWithEmailAndPassword(email, password).then(() => {\n        this.setState({\n          email: '',\n          password: ''\n        });\n      }).catch(err => console.log('Unable to sign in', err));\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      mod: \"googleSignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","auth","connect","googleSignInStart","FormInput","CustomButton","SignIn","Component","constructor","props","handleSubmit","email","password","state","signInWithEmailAndPassword","then","setState","catch","err","console","log","handleChange","event","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-in.scss';\nimport {auth} from '../../firebase/firebase-utils';\n\nimport {connect} from 'react-redux';\nimport {googleSignInStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\thandleSubmit = () => {\n\t\tconst {email, password} = this.state;\n\t\tauth.signInWithEmailAndPassword(email, password)\n\t\t.then(() => {\n\t\t\tthis.setState({email: '', password: ''})\n\t\t})\n\t\t.catch(err => console.log('Unable to sign in', err));\n\t}\n\n\thandleChange = event => {\n\t\tconst {value, name} = event.target;\n\t\tthis.setState({[name]: value});\n\t}\n\n\trender() {\n\t\tconst {googleSignInStart} = this.props;\n\t\treturn (\n\t\t\t<div className='sign-in'>\n\t\t\t\t<h2 className='title'>I already have an account</h2>\n\t\t\t\t<span>Sign in with your email and password</span>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname='email' \n\t\t\t\t\t\ttype='email' \n\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\thandleChange={this.handleChange} \n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\trequired \n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname='password' \n\t\t\t\t\t\ttype='password' \n\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\thandleChange={this.handleChange} \n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\trequired \n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<CustomButton type='submit' onClick={this.handleSubmit}>\n\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t\t<CustomButton type='button' onClick={googleSignInStart} mod='googleSignIn'>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}