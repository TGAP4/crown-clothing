{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport persistedReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(persistedReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","persistedReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,gBAAP,MAA6B,gBAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,gBAAD,EAAmBH,eAAe,CAAC,GAAGO,WAAJ,CAAlC,CAAzB;AAEP,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEPN,cAAc,CAACQ,GAAf,CAAmBT,QAAnB","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport {persistStore} from 'redux-persist';\nimport logger from 'redux-logger';\nimport persistedReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);"]},"metadata":{},"sourceType":"module"}