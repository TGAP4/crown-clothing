{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/pages/collections-overview/collections-overview.jsx\";\nimport React from 'react';\nimport './collections-overview.scss';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionsForPreview, selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport CollectionPreview from '../../components/collection-preview/collection-preview';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\nconst CollectionsOverview = ({\n  collections,\n  isLoading\n}) => {\n  return isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collections-overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, collections.map(({\n    id,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(CollectionPreview, Object.assign({\n    key: id\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview,\n  isLoading: selectIsCollectionFetching\n});\nexport default connect(mapStateToProps)(CollectionsOverview);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/pages/collections-overview/collections-overview.jsx"],"names":["React","connect","createStructuredSelector","selectCollectionsForPreview","selectIsCollectionFetching","CollectionPreview","LoadingSpinner","CollectionsOverview","collections","isLoading","map","id","rest","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,2BAAR,EAAqCC,0BAArC,QAAsE,iCAAtE;AAEA,OAAOC,iBAAP,MAA8B,wDAA9B;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AAGA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AACxD,SACEA,SAAS,gBACT,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAEP;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,WAAW,CAACE,GAAZ,CAAgB,CAAC;AAACC,IAAAA,EAAD;AAAK,OAAGC;AAAR,GAAD,kBACf,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAED;AAAxB,KAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD,CAHJ;AASD,CAVD;;AAYA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC/CM,EAAAA,WAAW,EAAEL,2BADkC;AAE/CM,EAAAA,SAAS,EAAEL;AAFoC,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAACY,eAAD,CAAP,CAAyBN,mBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './collections-overview.scss';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollectionsForPreview, selectIsCollectionFetching} from '../../redux/shop/shop-selectors';\n\nimport CollectionPreview from '../../components/collection-preview/collection-preview';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner'\n\n\nconst CollectionsOverview = ({collections, isLoading}) => {\n  return (\n    isLoading ?\n    <LoadingSpinner />\n    : <div className='collections-overview'>\n      {collections.map(({id, ...rest}) =>\n        <CollectionPreview key={id} {...rest} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview,\n  isLoading: selectIsCollectionFetching\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);"]},"metadata":{},"sourceType":"module"}