{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/client/src/pages/shop/shop.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStart } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport CollectionsOverview from '../collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  const preLoading = true;\n  useEffect(() => {\n    fetchCollectionsStart();\n    preLoading = false;\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: Collection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({// isLoading: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/pages/shop/shop.jsx"],"names":["React","useState","useEffect","Route","connect","createStructuredSelector","fetchCollectionsStart","selectIsCollectionFetching","CollectionsOverview","Collection","LoadingSpinner","ShopPage","match","preLoading","isLoading","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AAEA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQN,EAAAA;AAAR,CAAD,KAAoC;AACnD,QAAMO,UAAU,GAAG,IAAnB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,qBAAqB;AACrBO,IAAAA,UAAU,GAAG,KAAb;AACD,GAHQ,EAGN,CAACP,qBAAD,CAHM,CAAT;AAKA,sBACE,0CACGQ,SAAS,gBACR,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEP,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAMA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACG,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEN,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CAHN,CADF;AAkBD,CAzBD;;AA2BA,MAAMO,eAAe,GAAGX,wBAAwB,CAAC,CAC/C;AAD+C,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,qBAAqB,EAAE,MAAMY,QAAQ,CAACZ,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {fetchCollectionsStart} from '../../redux/shop/shop-actions';\nimport {selectIsCollectionFetching} from '../../redux/shop/shop-selectors';\n\nimport CollectionsOverview from '../collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\n\nconst ShopPage = ({match, fetchCollectionsStart}) => {\n  const preLoading = true;\n  useEffect(() => {\n    fetchCollectionsStart();\n    preLoading = false;\n  }, [fetchCollectionsStart]);\n\n  return (\n    <>\n      {isLoading ?\n        <LoadingSpinner />\n        : <div>\n          <Route \n            exact \n            path={`${match.path}`} \n            component={CollectionsOverview}\n          />\n          <Route \n            path={`${match.path}/:collectionId`}\n            component={Collection}\n          />\n        </div>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  // isLoading: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}