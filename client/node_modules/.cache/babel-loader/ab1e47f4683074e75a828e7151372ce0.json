{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCZr0n2mkvrHqgqiItcJ_xCw8Eam7HxqmE\",\n  authDomain: \"crown-database-ed8fc.firebaseapp.com\",\n  databaseURL: \"https://crown-database-ed8fc.firebaseio.com\",\n  projectId: \"crown-database-ed8fc\",\n  storageBucket: \"crown-database-ed8fc.appspot.com\",\n  messagingSenderId: \"219617685266\",\n  appId: \"1:219617685266:web:46ddde6db938c882624dcb\",\n  measurementId: \"G-DG8HQG94M7\"\n};\nexport const createUserProfileDocument = (userAuth, rest) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  userRef.get().then(snapShot => {\n    if (!snapShot.exists) {\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createdAt = new Date();\n      userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...rest\n      });\n    }\n  }).catch(err => console.log('Error creating user', err));\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","rest","userRef","firestore","doc","uid","get","then","snapShot","exists","displayName","email","createdAt","Date","set","catch","err","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,sCAFD;AAGXC,EAAAA,WAAW,EAAE,6CAHF;AAIXC,EAAAA,SAAS,EAAE,sBAJA;AAKXC,EAAAA,aAAa,EAAE,kCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC3D,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACAH,EAAAA,OAAO,CAACI,GAAR,GACCC,IADD,CACMC,QAAQ,IAAI;AAChB,QAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB;AACpB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAuBX,QAA7B;AACA,YAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAX,MAAAA,OAAO,CAACY,GAAR,CAAY;AAACJ,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAqBC,QAAAA,SAArB;AAAgC,WAAGX;AAAnC,OAAZ;AACD;AACF,GAPD,EAQCc,KARD,CAQOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC,CARd;AASA,SAAOd,OAAP;AACD,CAbM;AAePb,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAEA,OAAO,MAAM8B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCZr0n2mkvrHqgqiItcJ_xCw8Eam7HxqmE\",\n    authDomain: \"crown-database-ed8fc.firebaseapp.com\",\n    databaseURL: \"https://crown-database-ed8fc.firebaseio.com\",\n    projectId: \"crown-database-ed8fc\",\n    storageBucket: \"crown-database-ed8fc.appspot.com\",\n    messagingSenderId: \"219617685266\",\n    appId: \"1:219617685266:web:46ddde6db938c882624dcb\",\n    measurementId: \"G-DG8HQG94M7\"\n  };\n\n  export const createUserProfileDocument = (userAuth, rest) => {\n    if (!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    userRef.get()\n    .then(snapShot => {\n      if (!snapShot.exists) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n        userRef.set({displayName, email, createdAt, ...rest})\n      }\n    })\n    .catch(err => console.log('Error creating user', err));\n    return userRef;\n  }\n\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt: 'select_account'});\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}