{"ast":null,"code":"import _defineProperty from\"/Users/TGAP/Desktop/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/TGAP/Desktop/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/TGAP/Desktop/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import*as S from'./sign-up-styles';import{connect}from'react-redux';import{signUpStart as _signUpStart}from'../../redux/user/user-actions';import FormInput from'../form-input/form-input';import CustomButton from'../custom-button/custom-button';var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({email:'',password:'',confirmPassword:'',displayName:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=function handleSubmit(event){event.preventDefault();if(password!==confirmPassword){alert(\"Passwords do not match\");return;}signUpStart(email,password,displayName);};var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(S.SignUp,null,/*#__PURE__*/React.createElement(S.Title,null,\"I do not have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with with email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,handleChange:handleChange,label:\"Display Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,handleChange:handleChange,label:\"Email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,handleChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,handleChange:handleChange,label:\"Confirm Password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\",onClick:handleSubmit},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(email,password,displayName){return dispatch(_signUpStart({email:email,password:password,displayName:displayName}));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/components/sign-up/sign-up.jsx"],"names":["React","useState","S","connect","signUpStart","FormInput","CustomButton","SignUp","email","password","confirmPassword","displayName","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport * as S from './sign-up-styles';\n\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\n\nconst SignUp = ({signUpStart}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '', \n    password: '', \n    confirmPassword: '', \n    displayName: ''\n  });\n  const {displayName, email, password, confirmPassword} = userCredentials;\n  \n\n  const handleSubmit = event => {\n    event.preventDefault();  \n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    signUpStart(email, password, displayName);\n  }\n\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setUserCredentials({...userCredentials, [name]: value});\n  }\n\n\n  return (\n    <S.SignUp>\n      <S.Title>I do not have an account</S.Title>\n      <span>Sign up with with email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput \n          type='text' \n          name='displayName' \n          value={displayName} \n          handleChange={handleChange} \n          label='Display Name' \n          required \n        />\n          <FormInput \n          type='email' \n          name='email' \n          value={email} \n          handleChange={handleChange} \n          label='Email' \n          required \n        />\n          <FormInput \n          type='password' \n          name='password' \n          value={password} \n          handleChange={handleChange} \n          label='Password' \n          required \n        />\n          <FormInput \n          type='password' \n          name='confirmPassword' \n          value={confirmPassword} \n          handleChange={handleChange} \n          label='Confirm Password' \n          required \n        />\n        <CustomButton type='submit' onClick={handleSubmit}>SIGN UP</CustomButton>\n      </form>\n    </S.SignUp>\n  );\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => \n    dispatch(signUpStart({email, password, displayName}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}