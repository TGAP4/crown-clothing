{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from 'react';\nimport * as S from './cart-dropdown-styles';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart-actions';\nimport CartItem from '../cart-item/cart-item';\nimport CustomButton from '../custom-button/custom-button';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return /*#__PURE__*/React.createElement(S.CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.CartItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(S.EmptyMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(S.Button, {\n    as: CustomButton,\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","S","withRouter","connect","createStructuredSelector","selectCartItems","toggleCartHidden","CartItem","CustomButton","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,wBAAnB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AACvD,sBACE,oBAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAIG,oBAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALN,CADF,eASE,oBAAC,CAAD,CAAG,MAAH;AACE,IAAA,EAAE,EAAEP,YADN;AAEE,IAAA,OAAO,EAAE,MAAM;AACbG,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF;AAqBD,CAtBD;;AAwBA,MAAMY,eAAe,GAAGd,wBAAwB,CAAC;AAC/CM,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACC,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport * as S from './cart-dropdown-styles';\nimport {withRouter} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCartItems} from '../../redux/cart/cart-selectors';\nimport {toggleCartHidden} from '../../redux/cart/cart-actions';\n\nimport CartItem from '../cart-item/cart-item';\nimport CustomButton from '../custom-button/custom-button';\n\n\nconst CartDropdown = ({cartItems, history, dispatch}) => {\n  return (\n    <S.CartDropdown>\n      <S.CartItems>\n        {cartItems.length ?\n          cartItems.map(cartItem => \n            <CartItem key={cartItem.id} item={cartItem} />\n          )\n          : <S.EmptyMessage>Your cart is empty</S.EmptyMessage>\n        }\n      </S.CartItems>\n      <S.Button\n        as={CustomButton}\n        onClick={() => {\n          history.push('/checkout');\n          dispatch(toggleCartHidden());\n        }}\n      >\n        GO TO CHECKOUT\n      </S.Button>\n    </S.CartDropdown>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}