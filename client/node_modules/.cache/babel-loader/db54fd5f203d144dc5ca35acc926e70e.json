{"ast":null,"code":"import React from'react';import*as S from'./checkout-styles';import{connect}from'react-redux';import{createStructuredSelector}from'reselect';import{selectCartItems,selectCartTotal}from'../../redux/cart/cart-selectors';import CheckoutItem from'../../components/checkout-item/checkout-item';import StripeButton from'../../components/stripe-button/stripe-buttons';var CheckoutPage=function CheckoutPage(_ref){var cartItems=_ref.cartItems,cartTotal=_ref.cartTotal;return/*#__PURE__*/React.createElement(S.CheckoutPage,null,/*#__PURE__*/React.createElement(S.CheckoutHeader,null,/*#__PURE__*/React.createElement(S.HeaderBlock,null,/*#__PURE__*/React.createElement(\"span\",null,\"Product\")),/*#__PURE__*/React.createElement(S.HeaderBlock,null,/*#__PURE__*/React.createElement(\"span\",null,\"Description\")),/*#__PURE__*/React.createElement(S.HeaderBlock,null,/*#__PURE__*/React.createElement(\"span\",null,\"Quantity\")),/*#__PURE__*/React.createElement(S.HeaderBlock,null,/*#__PURE__*/React.createElement(\"span\",null,\"Price\")),/*#__PURE__*/React.createElement(S.HeaderBlock,null,/*#__PURE__*/React.createElement(\"span\",null,\"Remove\"))),cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CheckoutItem,{key:cartItem.id,cartItem:cartItem});}),/*#__PURE__*/React.createElement(S.Total,null,/*#__PURE__*/React.createElement(\"span\",null,\"TOTAL: $\",cartTotal)),/*#__PURE__*/React.createElement(S.TestWarning,null,\"*Please use the following test credit card for payments*\",/*#__PURE__*/React.createElement(\"br\",null),\"4242 4242 4242 4242 - Exp: 01/21 - CVV: 123\"),/*#__PURE__*/React.createElement(StripeButton,{price:cartTotal}));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,cartTotal:selectCartTotal});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/pages/checkout/checkout.jsx"],"names":["React","S","connect","createStructuredSelector","selectCartItems","selectCartTotal","CheckoutItem","StripeButton","CheckoutPage","cartItems","cartTotal","map","cartItem","id","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,mBAAnB,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,wBAAR,KAAuC,UAAvC,CACA,OAAQC,eAAR,CAAyBC,eAAzB,KAA+C,iCAA/C,CAEA,MAAOC,CAAAA,YAAP,KAAyB,8CAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+CAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA4B,IAA1BC,CAAAA,SAA0B,MAA1BA,SAA0B,CAAfC,SAAe,MAAfA,SAAe,CAC/C,mBACE,oBAAC,CAAD,CAAG,YAAH,mBACE,oBAAC,CAAD,CAAG,cAAH,mBACE,oBAAC,CAAD,CAAG,WAAH,mBACE,0CADF,CADF,cAIE,oBAAC,CAAD,CAAG,WAAH,mBACE,8CADF,CAJF,cAOE,oBAAC,CAAD,CAAG,WAAH,mBACE,2CADF,CAPF,cAUE,oBAAC,CAAD,CAAG,WAAH,mBACE,wCADF,CAVF,cAaE,oBAAC,CAAD,CAAG,WAAH,mBACE,yCADF,CAbF,CADF,CAkBGD,SAAS,CAACE,GAAV,CAAc,SAAAC,QAAQ,qBACrB,oBAAC,YAAD,EAAc,GAAG,CAAEA,QAAQ,CAACC,EAA5B,CAAgC,QAAQ,CAAED,QAA1C,EADqB,EAAtB,CAlBH,cAqBE,oBAAC,CAAD,CAAG,KAAH,mBACE,2CAAeF,SAAf,CADF,CArBF,cAwBE,oBAAC,CAAD,CAAG,WAAH,8EAEE,8BAFF,+CAxBF,cA6BE,oBAAC,YAAD,EAAc,KAAK,CAAEA,SAArB,EA7BF,CADF,CAiCD,CAlCD,CAoCA,GAAMI,CAAAA,eAAe,CAAGX,wBAAwB,CAAC,CAC/CM,SAAS,CAAEL,eADoC,CAE/CM,SAAS,CAAEL,eAFoC,CAAD,CAAhD,CAKA,cAAeH,CAAAA,OAAO,CAACY,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport * as S from './checkout-styles'\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCartItems, selectCartTotal} from '../../redux/cart/cart-selectors';\n\nimport CheckoutItem from '../../components/checkout-item/checkout-item';\nimport StripeButton from '../../components/stripe-button/stripe-buttons';\n\nconst CheckoutPage = ({cartItems, cartTotal}) => {\n  return (\n    <S.CheckoutPage>\n      <S.CheckoutHeader>\n        <S.HeaderBlock>\n          <span>Product</span>\n        </S.HeaderBlock>\n        <S.HeaderBlock>\n          <span>Description</span>\n        </S.HeaderBlock>\n        <S.HeaderBlock>\n          <span>Quantity</span>\n        </S.HeaderBlock>\n        <S.HeaderBlock>\n          <span>Price</span>\n        </S.HeaderBlock>\n        <S.HeaderBlock>\n          <span>Remove</span>\n        </S.HeaderBlock>\n      </S.CheckoutHeader>\n      {cartItems.map(cartItem => \n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n      )}\n      <S.Total>\n        <span>TOTAL: ${cartTotal}</span>\n      </S.Total>\n      <S.TestWarning>\n        *Please use the following test credit card for payments*\n        <br />\n        4242 4242 4242 4242 - Exp: 01/21 - CVV: 123\n      </S.TestWarning>\n      <StripeButton price={cartTotal} />\n    </S.CheckoutPage>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n})\n\nexport default connect(mapStateToProps)(CheckoutPage);"]},"metadata":{},"sourceType":"module"}