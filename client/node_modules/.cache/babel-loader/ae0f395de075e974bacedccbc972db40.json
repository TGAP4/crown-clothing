{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/client/src/components/stripe-button/stripe-buttons.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { clearCart } from '../../redux/cart/cart-actions';\nimport StripeCheckout from 'react-stripe-checkout';\n\nconst StripeButton = ({\n  price,\n  clearCart\n}) => {\n  const stripePrice = price * 100;\n  const publishableKey = 'pk_test_ZH77F2AxdYvabdnxSJaUTFHJ00cxlOYpm3';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: stripePrice,\n        token\n      }\n    }).then(response => {\n      alert('Payment Successful!');\n      clearCart();\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert(`There was an issue with your payment.  \n        Please make sure to use the credit card provided.`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Crown Clothing\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://sendeyo.com/up/d/f3eb2117da\",\n    description: `Your total is $${price}`,\n    amount: stripePrice,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeButton);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/components/stripe-button/stripe-buttons.jsx"],"names":["React","axios","connect","clearCart","StripeCheckout","StripeButton","price","stripePrice","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQH,EAAAA;AAAR,CAAD,KAAwB;AAC3C,QAAMI,WAAW,GAAGD,KAAK,GAAG,GAA5B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBT,IAAAA,KAAK,CAAC;AACJU,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,WADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQCK,IARD,CAQMC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACAd,MAAAA,SAAS;AACV,KAXD,EAYCe,KAZD,CAYOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CAAE;0DAAF,CAAL;AAED,KAhBD;AAiBD,GAlBD;;AAoBA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,qCALR;AAME,IAAA,WAAW,EAAG,kBAAiBX,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEC,WAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAtCD;;AAwCA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,SAAS,EAAE,MAAMsB,QAAQ,CAACtB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCnB,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport {connect} from 'react-redux';\nimport {clearCart} from '../../redux/cart/cart-actions';\n\nimport StripeCheckout from 'react-stripe-checkout';\n\nconst StripeButton = ({price, clearCart}) => {\n  const stripePrice = price * 100;\n  const publishableKey = 'pk_test_ZH77F2AxdYvabdnxSJaUTFHJ00cxlOYpm3';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: stripePrice,\n        token\n      }\n    })\n    .then(response => {\n      alert('Payment Successful!');\n      clearCart();\n    })\n    .catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert(`There was an issue with your payment.  \n        Please make sure to use the credit card provided.`);\n    });\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='Crown Clothing'\n      billingAddress\n      shippingAddress\n      image='https://sendeyo.com/up/d/f3eb2117da'\n      description={`Your total is $${price}`}\n      amount={stripePrice}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeButton);"]},"metadata":{},"sourceType":"module"}