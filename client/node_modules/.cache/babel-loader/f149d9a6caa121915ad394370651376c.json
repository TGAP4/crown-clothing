{"ast":null,"code":"import _regeneratorRuntime from\"/Users/TGAP/Desktop/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignout),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{all,call,takeLatest,put}from'redux-saga/effects';import Types from'../user/user-types';import{clearCart}from'./cart-actions';function clearCartOnSignout(){return _regeneratorRuntime.wrap(function clearCartOnSignout$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(Types.SIGN_OUT_SUCCESS,clearCartOnSignout);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);};","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/redux/cart/cart-sagas.js"],"names":["clearCartOnSignout","onSignOutSuccess","cartSagas","all","call","takeLatest","put","Types","clearCart","SIGN_OUT_SUCCESS"],"mappings":"yMAKUA,kB,iDAIAC,gB,iDAIeC,S,EAbzB,OAAQC,GAAR,CAAaC,IAAb,CAAmBC,UAAnB,CAA+BC,GAA/B,KAAyC,oBAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAAQC,SAAR,KAAwB,gBAAxB,CAGA,QAAUR,CAAAA,kBAAV,8IACE,MAAMM,CAAAA,GAAG,CAACE,SAAS,EAAV,CAAT,CADF,sDAIA,QAAUP,CAAAA,gBAAV,gJACE,MAAMI,CAAAA,UAAU,CAACE,KAAK,CAACE,gBAAP,CAAyBT,kBAAzB,CAAhB,CADF,wDAIA,cAAe,SAAUE,CAAAA,SAAV,yIACb,MAAMC,CAAAA,GAAG,CAAC,CACRC,IAAI,CAACH,gBAAD,CADI,CAAD,CAAT,CADa,wDAId","sourcesContent":["import {all, call, takeLatest, put} from 'redux-saga/effects';\nimport Types from '../user/user-types';\nimport {clearCart} from './cart-actions';\n\n\nfunction* clearCartOnSignout() {\n  yield put(clearCart());\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(Types.SIGN_OUT_SUCCESS, clearCartOnSignout);\n}\n\nexport default function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}