{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport { signInSuccess, signInFailure } from './user-actions';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\n;\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n;\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\n;\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","Types","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;;AAGA,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC1C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACG,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa,CACrB;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KADqB,CAAd,CAAT;AAGD,GAND,CAME,OAAMC,KAAN,EAAa;AACb,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;;AAAA;;AAGD,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMf,IAAI,CAACgB,eAAL,CAAqBf,cAArB,CAArB;AACA,UAAMK,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAa;AACb,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;;AAAA;;AAED,UAAUI,mBAAV,GAAgC;AAC9B,QAAMrB,UAAU,CAACO,KAAK,CAACe,oBAAP,EAA6BJ,gBAA7B,CAAhB;AACD;;AAAA;;AAGD,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AACtD,MAAI;AACF,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMf,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMhB,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAa;AACb,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;;AAAA;;AAED,UAAUW,kBAAV,GAA+B;AAC7B,QAAM5B,UAAU,CAACO,KAAK,CAACsB,mBAAP,EAA4BN,eAA5B,CAAhB;AACD;;AAAA;AAGD,eAAe,UAAUO,SAAV,GAAsB;AACnC,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACkB,mBAAD,CADI,EAERlB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID;AAAA","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase-utils';\nimport Types from './user-types';\nimport {signInSuccess, signInFailure} from './user-actions';\n\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(\n      {id: userSnapshot.id, ...userSnapshot.data()}\n    ));\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n};\n\n\nfunction* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error)); \n  }\n};\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\n\nfunction* signInWithEmail({payload: {email, password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error)); \n  }\n};\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\n\nexport default function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}