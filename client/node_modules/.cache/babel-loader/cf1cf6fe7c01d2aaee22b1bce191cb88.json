{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/components/sign-up/sign-up.jsx\";\nimport React from 'react';\nimport './sign-up.scss';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase-utils';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user-actions';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match\");\n        return;\n      }\n\n      signUpStart(email, password, displayName); // auth.createUserWithEmailAndPassword(email, password)\n      // .then(user => createUserProfileDocument(user.user, {displayName}))\n      // .then(() => {\n      //   this.setState({\n      //     displayName: '',\n      //     email: '',\n      //     password: '',\n      //     confirmPassword: ''\n      //   })\n      // })\n      // .catch(err => console.log('Error signing up:', err));\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Sign up with with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/components/sign-up/sign-up.jsx"],"names":["React","auth","createUserProfileDocument","connect","signUpStart","FormInput","CustomButton","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","props","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-up.scss';\nimport {auth, createUserProfileDocument} from '../../firebase/firebase-utils';\n\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user-actions';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }\n  }\n  \n  handleSubmit = event => {\n    event.preventDefault();\n    const {displayName, email, password, confirmPassword} = this.state;\n    const {signUpStart} = this.props;\n    \n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    \n    signUpStart(email, password, displayName);\n\n    // auth.createUserWithEmailAndPassword(email, password)\n    // .then(user => createUserProfileDocument(user.user, {displayName}))\n    // .then(() => {\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: ''\n    //   })\n    // })\n    // .catch(err => console.log('Error signing up:', err));\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  render() {\n    const {displayName, email, password, confirmPassword} = this.state;\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have an account</h2>\n        <span>Sign up with with email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput \n            type='text' \n            name='displayName' \n            value={displayName} \n            handleChange={this.handleChange} \n            label='Display Name' \n            required \n          />\n           <FormInput \n            type='email' \n            name='email' \n            value={email} \n            handleChange={this.handleChange} \n            label='Email' \n            required \n          />\n           <FormInput \n            type='password' \n            name='password' \n            value={password} \n            handleChange={this.handleChange} \n            label='Password' \n            required \n          />\n           <FormInput \n            type='password' \n            name='confirmPassword' \n            value={confirmPassword} \n            handleChange={this.handleChange} \n            label='Confirm Password' \n            required \n          />\n          <CustomButton type='submit' onClick={this.handleSubmit}>SIGN UP</CustomButton>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => \n    dispatch(signUpStart({email, password, displayName}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}