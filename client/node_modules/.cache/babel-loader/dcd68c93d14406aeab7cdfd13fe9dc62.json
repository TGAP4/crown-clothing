{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/pages/shop/shop.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStart } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport CollectionsOverview from '../collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart,\n  isLoading\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: Collection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/pages/shop/shop.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","fetchCollectionsStart","selectIsCollectionFetching","CollectionsOverview","Collection","LoadingSpinner","ShopPage","match","isLoading","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AAEA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQN,EAAAA,qBAAR;AAA+BO,EAAAA;AAA/B,CAAD,KAA+C;AAC9DX,EAAAA,SAAS,CAAC,MAAM;AAACI,IAAAA,qBAAqB;AAAG,GAAhC,EAAkC,CAACA,qBAAD,CAAlC,CAAT;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,SAAS,gBACV,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,gBAER;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEN,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAMA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACE,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEL,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CAHF,CADF;AAiBD,CApBD;;AAsBA,MAAMM,eAAe,GAAGV,wBAAwB,CAAC;AAC/CQ,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {fetchCollectionsStart} from '../../redux/shop/shop-actions';\nimport {selectIsCollectionFetching} from '../../redux/shop/shop-selectors';\n\nimport CollectionsOverview from '../collections-overview/collections-overview';\nimport Collection from '../collection/collection';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\n\nconst ShopPage = ({match, fetchCollectionsStart, isLoading}) => {\n  useEffect(() => {fetchCollectionsStart()}, [fetchCollectionsStart]);\n\n  return (\n    <div>\n    {isLoading ?\n    <LoadingSpinner />\n    : <div className='shop-page'>\n      <Route \n        exact \n        path={`${match.path}`} \n        component={CollectionsOverview}\n      />\n      <Route \n        path={`${match.path}/:collectionId`}\n        component={Collection}\n      />\n    </div>}\n    </div>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}