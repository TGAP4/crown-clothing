{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/crown-clothing/src/pages/collection/collection.jsx\";\nimport React from 'react';\nimport './collection.scss';\nimport { connect } from 'react-redux';\nimport { selectCollection, selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\nconst Collection = ({\n  collection,\n  isLoading\n}) => {\n  const {\n    title,\n    items\n  } = collection;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n      key: item.id,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }))));\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n  isLoading: selectIsCollectionFetching\n});\n\nexport default connect(mapStateToProps)(Collection);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/pages/collection/collection.jsx"],"names":["React","connect","selectCollection","selectIsCollectionFetching","CollectionItem","LoadingSpinner","Collection","collection","isLoading","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,0BAA1B,QAA2D,iCAA3D;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAC9C,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAiBH,UAAvB;;AACE,MAAIC,SAAJ,EAAe;AACf,wBAAQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAA2B,GAD3B,MAEI;AAAE,wBAAO;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBC,KAAvB,CADS,eAET;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACf,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADH,CAFS,CAAP;AAOC;AACV,CAZD;;AAcA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CT,EAAAA,UAAU,EAAEL,gBAAgB,CAACc,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD,CADgC;AAE5CP,EAAAA,SAAS,EAAEL;AAFiC,CAAtB,CAAxB;;AAKA,eAAeF,OAAO,CAACa,eAAD,CAAP,CAAyBR,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './collection.scss';\n\nimport {connect} from 'react-redux';\nimport {selectCollection, selectIsCollectionFetching} from '../../redux/shop/shop-selectors';\n\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\n\n\nconst Collection = ({collection, isLoading}) => {\n  const {title, items} = collection;\n    if (isLoading) {\n    return  <LoadingSpinner />}\n    else{ return <div className='collection'>\n        <h2 className='title'>{title}</h2>\n        <div className='items'>\n          {items.map(item => \n          <CollectionItem key={item.id} item={item} />\n          )}\n        </div>\n    </div>}\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n  isLoading: selectIsCollectionFetching\n})\n\nexport default connect(mapStateToProps)(Collection);"]},"metadata":{},"sourceType":"module"}