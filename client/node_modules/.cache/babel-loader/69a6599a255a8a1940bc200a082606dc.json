{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport Types from './shop-types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase-utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop-actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(Types.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/src/redux/shop/shop-sagas.js"],"names":["takeLatest","call","all","put","Types","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAG;AACD,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CAACI,KAAK,CAACc,uBAAP,EAAgCT,qBAAhC,CAAhB;AACD;AAAA;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CACRD,IAAI,CAACgB,qBAAD,CADI,CAAD,CAAT;AAGD;AAAA","sourcesContent":["import {takeLatest, call, all, put} from 'redux-saga/effects';\nimport Types from './shop-types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase-utils';\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop-actions';\n\n\nexport function* fetchCollectionsAsync() {\n  try{\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n};\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(Types.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n};\n\nexport function* shopSagas() {\n  yield all([\n    call(fetchCollectionsStart)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}