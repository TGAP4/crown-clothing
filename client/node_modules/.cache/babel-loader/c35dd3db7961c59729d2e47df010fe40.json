{"ast":null,"code":"import{createSelector}from'reselect';var selectShop=function selectShop(state){return state.shop;};export var selectShopCollections=createSelector([selectShop],function(shop){return shop.collections;});export var selectCollectionsForPreview=createSelector([selectShopCollections],function(shopCollections){return Object.keys(shopCollections).map(function(key){return shopCollections[key];});});export var selectCollection=function selectCollection(collectionUrlParam){return createSelector([selectShopCollections],function(shopCollections){return shopCollections[collectionUrlParam]||{items:[]};});};export var selectIsCollectionFetching=createSelector([selectShop],function(shop){return shop.isFetching;});","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/redux/shop/shop-selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","shopCollections","Object","keys","map","key","selectCollection","collectionUrlParam","items","selectIsCollectionFetching","isFetching"],"mappings":"AAAA,OAAQA,cAAR,KAA6B,UAA7B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,CAEjD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,WAAT,EAF6C,CAA5C,CAKP,MAAO,IAAMC,CAAAA,2BAA2B,CAAGN,cAAc,CACvD,CAACI,qBAAD,CADuD,CAEvD,SAAAG,eAAe,QAAIC,CAAAA,MAAM,CAACC,IAAP,CAAYF,eAAZ,EAChBG,GADgB,CACZ,SAAAC,GAAG,QAAIJ,CAAAA,eAAe,CAACI,GAAD,CAAnB,EADS,CAAJ,EAFwC,CAAlD,CAMP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,kBAAkB,QAAIb,CAAAA,cAAc,CAClE,CAACI,qBAAD,CADkE,CAElE,SAAAG,eAAe,QAAIA,CAAAA,eAAe,CAACM,kBAAD,CAAf,EAAuC,CAACC,KAAK,CAAE,EAAR,CAA3C,EAFmD,CAAlB,EAA3C,CAKP,MAAO,IAAMC,CAAAA,0BAA0B,CAAGf,cAAc,CACtD,CAACC,UAAD,CADsD,CAEtD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACa,UAAT,EAFkD,CAAjD","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectShopCollections],\n  shopCollections => Object.keys(shopCollections)\n    .map(key => shopCollections[key])\n);\n\nexport const selectCollection = collectionUrlParam => createSelector(\n  [selectShopCollections],\n  shopCollections => shopCollections[collectionUrlParam] || {items: []}\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);"]},"metadata":{},"sourceType":"module"}