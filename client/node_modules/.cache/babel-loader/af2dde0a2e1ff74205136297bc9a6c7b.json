{"ast":null,"code":"import React from'react';import*as S from'./checkout-item-styles';import{connect}from'react-redux';import{clearItemFromCart,addItem as _addItem,removeItem as _removeItem}from'../../redux/cart/cart-actions';var CheckoutItem=function CheckoutItem(_ref){var cartItem=_ref.cartItem,addItem=_ref.addItem,removeItem=_ref.removeItem,clearItem=_ref.clearItem;var name=cartItem.name,imageUrl=cartItem.imageUrl,price=cartItem.price,quantity=cartItem.quantity;return/*#__PURE__*/React.createElement(S.CheckoutItem,null,/*#__PURE__*/React.createElement(S.ImageContainer,null,/*#__PURE__*/React.createElement(S.Img,{src:imageUrl,alt:\"item\"})),/*#__PURE__*/React.createElement(S.Detail,null,name),/*#__PURE__*/React.createElement(S.Quantity,null,/*#__PURE__*/React.createElement(S.Arrow,{onClick:function onClick(){return removeItem(cartItem);}},\"\\u276E\"),/*#__PURE__*/React.createElement(S.QuantityValue,null,quantity),/*#__PURE__*/React.createElement(S.Arrow,{onClick:function onClick(){return addItem(cartItem);}},\"\\u276F\")),/*#__PURE__*/React.createElement(S.Detail,null,price),/*#__PURE__*/React.createElement(S.RemoveButton,{onClick:function onClick(){return clearItem(cartItem);}},\"\\u2715\"));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addItem:function addItem(item){return dispatch(_addItem(item));},removeItem:function removeItem(item){return dispatch(_removeItem(item));},clearItem:function clearItem(item){return dispatch(clearItemFromCart(item));}};};export default connect(null,mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/Users/TGAP/Desktop/crown-clothing/client/src/components/checkout-item/checkout-item.jsx"],"names":["React","S","connect","clearItemFromCart","addItem","removeItem","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,wBAAnB,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,iBAAT,CAA4BC,OAAO,GAAPA,CAAAA,QAA5B,CAAqCC,UAAU,GAAVA,CAAAA,WAArC,KAAuD,+BAAvD,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgD,IAA9CC,CAAAA,QAA8C,MAA9CA,QAA8C,CAApCH,OAAoC,MAApCA,OAAoC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfG,SAAe,MAAfA,SAAe,IAC5DC,CAAAA,IAD4D,CACzBF,QADyB,CAC5DE,IAD4D,CACtDC,QADsD,CACzBH,QADyB,CACtDG,QADsD,CAC5CC,KAD4C,CACzBJ,QADyB,CAC5CI,KAD4C,CACrCC,QADqC,CACzBL,QADyB,CACrCK,QADqC,CAEnE,mBACE,oBAAC,CAAD,CAAG,YAAH,mBACE,oBAAC,CAAD,CAAG,cAAH,mBACE,oBAAC,CAAD,CAAG,GAAH,EAAO,GAAG,CAAEF,QAAZ,CAAsB,GAAG,CAAC,MAA1B,EADF,CADF,cAIE,oBAAC,CAAD,CAAG,MAAH,MAAWD,IAAX,CAJF,cAKE,oBAAC,CAAD,CAAG,QAAH,mBACE,oBAAC,CAAD,CAAG,KAAH,EAAS,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAACE,QAAD,CAAhB,EAAlB,WADF,cAIE,oBAAC,CAAD,CAAG,aAAH,MAAkBK,QAAlB,CAJF,cAKE,oBAAC,CAAD,CAAG,KAAH,EAAS,OAAO,CAAE,yBAAMR,CAAAA,OAAO,CAACG,QAAD,CAAb,EAAlB,WALF,CALF,cAcE,oBAAC,CAAD,CAAG,MAAH,MAAWI,KAAX,CAdF,cAeE,oBAAC,CAAD,CAAG,YAAH,EAAgB,OAAO,CAAE,yBAAMH,CAAAA,SAAS,CAACD,QAAD,CAAf,EAAzB,WAfF,CADF,CAqBD,CAvBD,CAyBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCV,OAAO,CAAE,iBAAAW,IAAI,QAAID,CAAAA,QAAQ,CAACV,QAAO,CAACW,IAAD,CAAR,CAAZ,EADyB,CAEtCV,UAAU,CAAE,oBAAAU,IAAI,QAAID,CAAAA,QAAQ,CAACT,WAAU,CAACU,IAAD,CAAX,CAAZ,EAFsB,CAGtCP,SAAS,CAAE,mBAAAO,IAAI,QAAID,CAAAA,QAAQ,CAACX,iBAAiB,CAACY,IAAD,CAAlB,CAAZ,EAHuB,CAAL,EAAnC,CAMA,cAAeb,CAAAA,OAAO,CAAC,IAAD,CAAOW,kBAAP,CAAP,CAAkCP,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport * as S from './checkout-item-styles';\n\nimport {connect} from 'react-redux';\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart-actions';\n\nconst CheckoutItem = ({cartItem, addItem, removeItem, clearItem}) => {\n  const {name, imageUrl, price, quantity} = cartItem;\n  return (\n    <S.CheckoutItem>\n      <S.ImageContainer>\n        <S.Img src={imageUrl} alt='item' />\n      </S.ImageContainer>\n      <S.Detail>{name}</S.Detail>\n      <S.Quantity>\n        <S.Arrow onClick={() => removeItem(cartItem)}>\n          &#10094;\n        </S.Arrow>\n        <S.QuantityValue>{quantity}</S.QuantityValue>\n        <S.Arrow onClick={() => addItem(cartItem)}>\n          &#10095;\n        </S.Arrow>\n      </S.Quantity>\n      <S.Detail>{price}</S.Detail>\n      <S.RemoveButton onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </S.RemoveButton>\n    </S.CheckoutItem>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)),\n  clearItem: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}